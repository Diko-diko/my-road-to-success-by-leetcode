题目：
给你 n 个非负整数 a1，a2，...，an，每个数代表坐标中的一个点 (i, ai) 。
在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。
找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。
说明：你不能倾斜容器，且 n 的值至少为 2。

思路：
1.不采用暴力法的话，就要精简搜索木板的次数。
一边在头，一边在尾，比较两块木板间那一块更短，用其height与横轴长度相乘，横轴长度为尾-头
2.比较得到的面积（临时变量）与前一个算出来的面积，得出max。则现在得到的面积用局部变量存储，上一个用全局变量存储

class Solution {
    public int maxArea(int[] height) {
        int len=height.length;
        if(len<2) return 0;
        int p=0,q=len-1;
        int max=0;
        while(p<q){
            int area=(q-p)*Math.min(height[p],height[q]);
            max=Math.max(area,max);
            if(height[p]<height[q])
                p++;
            else
                q--;
        }
        return max;
    }
}
