2020/3/22
题目:给定一个区间的集合，找到需要移除区间的最小数量，使剩余区间互不重叠。
注意:
    可以认为区间的终点总是大于它的起点。
    区间 [1,2] 和 [2,3] 的边界相互“接触”，但没有相互重叠。

思路：
1.还是先把intervals排好序
2.双重循环，每次固定好一个，使之与其之前的各个比较一次，在之前每个的dp[]值基础上+1
3.最后再用一次max函数选出最大的

class Solution {
    public int eraseOverlapIntervals(int[][] intervals) {
        int len=intervals.length;
        if(len==0) return 0;
        Arrays.sort(intervals,new Comparator<int[]>(){
            public int compare(int []a,int []b){
                return a[1]-b[1];
            }
        });
        
        int []dp=new int[len];
        Arrays.fill(dp,1);
        for(int i=1;i<len;i++){
            for(int j=0;j<i;j++){
                if(intervals[j][1]<=intervals[i][0]){
                    dp[i]=Math.max(dp[i],dp[j]+1);
                }
            }
        }
        int res=dp[0];
        for(int i=1;i<len;i++){
            res=Math.max(res,dp[i]);
        }
        return len-res;
    }
}
